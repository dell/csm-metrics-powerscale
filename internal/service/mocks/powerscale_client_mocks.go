/*
 Copyright (c) 2022 Dell Inc. or its subsidiaries. All Rights Reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/csm-metrics-powerscale/internal/service (interfaces: PowerScaleClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	goisilon "github.com/dell/goisilon"
	gomock "github.com/golang/mock/gomock"
)

// MockPowerScaleClient is a mock of PowerScaleClient interface.
type MockPowerScaleClient struct {
	ctrl     *gomock.Controller
	recorder *MockPowerScaleClientMockRecorder
}

// MockPowerScaleClientMockRecorder is the mock recorder for MockPowerScaleClient.
type MockPowerScaleClientMockRecorder struct {
	mock *MockPowerScaleClient
}

// NewMockPowerScaleClient creates a new mock instance.
func NewMockPowerScaleClient(ctrl *gomock.Controller) *MockPowerScaleClient {
	mock := &MockPowerScaleClient{ctrl: ctrl}
	mock.recorder = &MockPowerScaleClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPowerScaleClient) EXPECT() *MockPowerScaleClientMockRecorder {
	return m.recorder
}

// GetAllQuotas mocks base method.
func (m *MockPowerScaleClient) GetAllQuotas(arg0 context.Context) (goisilon.QuotaList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllQuotas", arg0)
	ret0, _ := ret[0].(goisilon.QuotaList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllQuotas indicates an expected call of GetAllQuotas.
func (mr *MockPowerScaleClientMockRecorder) GetAllQuotas(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllQuotas", reflect.TypeOf((*MockPowerScaleClient)(nil).GetAllQuotas), arg0)
}

// GetFloatStatistics mocks base method.
func (m *MockPowerScaleClient) GetFloatStatistics(arg0 context.Context, arg1 []string) (goisilon.FloatStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFloatStatistics", arg0, arg1)
	ret0, _ := ret[0].(goisilon.FloatStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFloatStatistics indicates an expected call of GetFloatStatistics.
func (mr *MockPowerScaleClientMockRecorder) GetFloatStatistics(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFloatStatistics", reflect.TypeOf((*MockPowerScaleClient)(nil).GetFloatStatistics), arg0, arg1)
}
