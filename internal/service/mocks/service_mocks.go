// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/csm-metrics-powerscale/internal/service (interfaces: Service)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// ExportClusterMetrics mocks base method.
func (m *MockService) ExportClusterMetrics(arg0 context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExportClusterMetrics", arg0)
}

// ExportClusterMetrics indicates an expected call of ExportClusterMetrics.
func (mr *MockServiceMockRecorder) ExportClusterMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportClusterMetrics", reflect.TypeOf((*MockService)(nil).ExportClusterMetrics), arg0)
}

// ExportVolumeMetrics mocks base method.
func (m *MockService) ExportVolumeMetrics(arg0 context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExportVolumeMetrics", arg0)
}

// ExportVolumeMetrics indicates an expected call of ExportVolumeMetrics.
func (mr *MockServiceMockRecorder) ExportVolumeMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportVolumeMetrics", reflect.TypeOf((*MockService)(nil).ExportVolumeMetrics), arg0)
}
