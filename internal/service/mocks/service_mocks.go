/*
 Copyright (c) 2025 Dell Inc. or its subsidiaries. All Rights Reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/csm-metrics-powerscale/internal/service (interfaces: Service)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// ExportClusterCapacityMetrics mocks base method.
func (m *MockService) ExportClusterCapacityMetrics(arg0 context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExportClusterCapacityMetrics", arg0)
}

// ExportClusterCapacityMetrics indicates an expected call of ExportClusterCapacityMetrics.
func (mr *MockServiceMockRecorder) ExportClusterCapacityMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportClusterCapacityMetrics", reflect.TypeOf((*MockService)(nil).ExportClusterCapacityMetrics), arg0)
}

// ExportClusterPerformanceMetrics mocks base method.
func (m *MockService) ExportClusterPerformanceMetrics(arg0 context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExportClusterPerformanceMetrics", arg0)
}

// ExportClusterPerformanceMetrics indicates an expected call of ExportClusterPerformanceMetrics.
func (mr *MockServiceMockRecorder) ExportClusterPerformanceMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportClusterPerformanceMetrics", reflect.TypeOf((*MockService)(nil).ExportClusterPerformanceMetrics), arg0)
}

// ExportQuotaMetrics mocks base method.
func (m *MockService) ExportQuotaMetrics(arg0 context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExportQuotaMetrics", arg0)
}

// ExportQuotaMetrics indicates an expected call of ExportQuotaMetrics.
func (mr *MockServiceMockRecorder) ExportQuotaMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportQuotaMetrics", reflect.TypeOf((*MockService)(nil).ExportQuotaMetrics), arg0)
}

// ExportTopologyMetrics mocks base method.
func (m *MockService) ExportTopologyMetrics(arg0 context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExportTopologyMetrics", arg0)
}

// ExportTopologyMetrics indicates an expected call of ExportTopologyMetrics.
func (mr *MockServiceMockRecorder) ExportTopologyMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportTopologyMetrics", reflect.TypeOf((*MockService)(nil).ExportTopologyMetrics), arg0)
}
